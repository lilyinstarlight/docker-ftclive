name: Update

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
    steps:
      - uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.REPO_KEY }}

      - name: Configure git
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email '41898282+github-actions[bot]@users.noreply.github.com'

      - name: Check for updates
        run: |
          latest_version="$(gh release view -R FIRST-Tech-Challenge/scorekeeper --json tagName --jq '.tagName[1:]')"
          latest_channel="$(curl -sSfL "$(gh release view -R FIRST-Tech-Challenge/scorekeeper --json body --jq '(.body | match("(https://[^ >\n]*)")).captures[0].string')" | grep -F window.channelToken | sed -e 's/^.*window.channelToken = "\([^"]*\)".*$/\1/')"
          current_version="$(grep -o '^ARG VERSION=[0-9]\+\.[0-9]\+\.[0-9]\+$' Dockerfile | head -n1 | sed -e 's/^ARG VERSION=//')"
          today="$(date +'%Y-%m-%d')"

          [ -n "$latest_version" ] || (echo 'failed to check latest version' >&2; exit 1)

          if [ ! "$latest_version" = "$current_version" ]; then
            sed -i -e 's/^ARG VERSION=[0-9]\+\.[0-9]\+\.[0-9]\+$/ARG VERSION='"$latest_version"'/' Dockerfile
            sed -i -e 's/^ARG CHANNEL=\w\+$/ARG CHANNEL='"$latest_channel"'/' Dockerfile
            sed -i -e 's/^ARG BUILD_DATE=[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}$/ARG BUILD_DATE='"$today"'/' Dockerfile
          fi

      - name: Push changes
        run: |
          if ! git diff --exit-code --quiet Dockerfile; then
            git commit -m "update FTCLive release" Dockerfile
            git pull --rebase
            git push
          fi
